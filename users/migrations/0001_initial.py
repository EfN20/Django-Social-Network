# Generated by Django 3.1.7 on 2021-04-23 03:06

from django.conf import settings
from django.db import migrations, models
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('tag', models.CharField(max_length=32, unique=True, verbose_name='tag')),
                ('phone_number', models.CharField(max_length=12, unique=True, verbose_name='phone number')),
                ('email', models.EmailField(max_length=64, unique=True, verbose_name='email address')),
                ('avatar', models.ImageField(default='media/avatars/default_avatar.png', upload_to='media/avatars/')),
                ('is_staff', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(null=True)),
                ('friend_list', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
    ]
